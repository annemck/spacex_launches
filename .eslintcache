[{"/Users/annemckendry/Desktop/xDesign/Code Challenge/spacex-launches/src/index.tsx":"1","/Users/annemckendry/Desktop/xDesign/Code Challenge/spacex-launches/src/App.tsx":"2","/Users/annemckendry/Desktop/xDesign/Code Challenge/spacex-launches/src/API.ts":"3","/Users/annemckendry/Desktop/xDesign/Code Challenge/spacex-launches/src/components/launches/launchContainer.tsx":"4","/Users/annemckendry/Desktop/xDesign/Code Challenge/spacex-launches/src/components/launches/launchListItem.tsx":"5","/Users/annemckendry/Desktop/xDesign/Code Challenge/spacex-launches/src/components/buttons/buttonContainer.tsx":"6","/Users/annemckendry/Desktop/xDesign/Code Challenge/spacex-launches/src/components/buttons/reloadButton.tsx":"7","/Users/annemckendry/Desktop/xDesign/Code Challenge/spacex-launches/src/components/buttons/sortButton.tsx":"8","/Users/annemckendry/Desktop/xDesign/Code Challenge/spacex-launches/src/components/buttons/yearFilterButton.tsx":"9"},{"size":197,"mtime":1607443089165,"results":"10","hashOfConfig":"11"},{"size":3448,"mtime":1607763792971,"results":"12","hashOfConfig":"11"},{"size":1917,"mtime":1607763792970,"results":"13","hashOfConfig":"11"},{"size":306,"mtime":1607763793060,"results":"14","hashOfConfig":"11"},{"size":709,"mtime":1607763793062,"results":"15","hashOfConfig":"11"},{"size":911,"mtime":1607702504196,"results":"16","hashOfConfig":"11"},{"size":391,"mtime":1607763793055,"results":"17","hashOfConfig":"11"},{"size":524,"mtime":1607763793056,"results":"18","hashOfConfig":"11"},{"size":835,"mtime":1607763793058,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1m9672u",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/annemckendry/Desktop/xDesign/Code Challenge/spacex-launches/src/index.tsx",[],["41","42"],"/Users/annemckendry/Desktop/xDesign/Code Challenge/spacex-launches/src/App.tsx",["43"],"/Users/annemckendry/Desktop/xDesign/Code Challenge/spacex-launches/src/API.ts",[],"/Users/annemckendry/Desktop/xDesign/Code Challenge/spacex-launches/src/components/launches/launchContainer.tsx",[],"/Users/annemckendry/Desktop/xDesign/Code Challenge/spacex-launches/src/components/launches/launchListItem.tsx",[],"/Users/annemckendry/Desktop/xDesign/Code Challenge/spacex-launches/src/components/buttons/buttonContainer.tsx",[],"/Users/annemckendry/Desktop/xDesign/Code Challenge/spacex-launches/src/components/buttons/reloadButton.tsx",["44"],"import React from 'react';\n\ntype Props = {\n  reload: Function\n}\n\nexport const ReloadButton: React.FC<Props> = ({reload}) => {\n  \n  const handleReload = () => {\n    reload();\n  }\n  \n  return(\n    <button data-testid=\"reload-button\" onClick={handleReload}>Reload Button</button>\n  )\n}\n","/Users/annemckendry/Desktop/xDesign/Code Challenge/spacex-launches/src/components/buttons/sortButton.tsx",["45","46"],"import React from 'react';\n\ntype Props = {\n  order: string,\n  changeSort: Function\n}\n\n\nexport const SortButton: React.FC<Props> = ({order, changeSort}) => {\n  \n  const handleClick = () => {\n    changeSort();\n  }\n  \n  return(\n    <div>\n      {order === 'asc'\n      ? <button onClick={handleClick}>Sort Descending</button>\n      : <button onClick={handleClick}>Sort Ascending</button>}\n    </div>\n  )\n  \n}\n","/Users/annemckendry/Desktop/xDesign/Code Challenge/spacex-launches/src/components/buttons/yearFilterButton.tsx",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":114,"column":9,"nodeType":"53","endLine":114,"endColumn":88},{"ruleId":"54","severity":1,"message":"55","line":16,"column":102,"nodeType":"53","endLine":16,"endColumn":126},{"ruleId":"54","severity":1,"message":"55","line":19,"column":55,"nodeType":"53","endLine":19,"endColumn":76},{"ruleId":"54","severity":1,"message":"55","line":20,"column":54,"nodeType":"53","endLine":20,"endColumn":75},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]